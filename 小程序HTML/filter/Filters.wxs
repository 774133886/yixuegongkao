/*
使用方法 在 wxml引用
<wxs module="filter" src="../../filter/Filters.wxs"></wxs>
赋值：
{{filter.toFix(item.dMoney)}}
 */


var Filters = {
  //两位小数
  toFix: function (value) {
    return  parseFloat(isNaN(value) ? 0 : value).toFixed(2);
  },
  abs:function(value){
    return Math.abs(value);
  },
  //判断字符串中是否包含指定的值，如果没有则插入
  strIndexOf: function (value, searchvalue, host) {
    if (value != null && value.length > 0) {
      if (value.indexOf(searchvalue) != -1) {
        return value;
      }
      else {
        return host + value;
      }
    }
  },
  //判断字符串中是否包含http://或https://，如果没有则插入
  strIndexOfHTTP: function (value, host) {
    console.log(value);
    if (value != null && value.length > 0) {
      if (value.indexOf("http://") != -1 || value.indexOf("https://") != -1) {
        return value;
      }
      else {
        return host + value;
      }
    }
  },
  // 秒转时分秒
  toTime: function (s) {
    var t;
    if (s > -1) {
      var hour = Math.floor(s / 3600);
      var min = Math.floor(s / 60) % 60;
      var sec = s % 60;
      if (hour > 0) {
        if (hour < 10) {
          t = '0' + hour + "h";
        } else {
          t = hour + "h";
        }
        if (min < 10) { t += "0"; }
        t += min + "min";
        if (sec < 10) { t += "0"; }
        t += sec + "s";
      } else {
        if (min > 0) {
          if (min < 10) { t += "0"; }
          t = min + "min";
          if (sec < 10) { t += "0"; }
          t += sec + "s";
        } else {
          if (sec < 10) { t += "0"; }
          t = sec + "s";
        }

      }



    }
    return t;
  },
  // 秒转时分秒
  toTime2: function (s) {
    var t;
    if (s > -1) {
      var day = Math.floor(s / (3600*24));
      var hour = Math.floor(s / 3600) % 24;
      var min = Math.floor(s / 60) % 60;
      var sec = s % 60;
      if (day>0){
        if (hour > 0) {
          if (hour < 10) {
            t = day +'天 '+ ' 0' + hour + ":";
          } else {
            t = day + '天 ' + hour + ":";
          }
          if (min < 10) { t += "0"; }
          t += min + ":";
          if (sec < 10) { t += "0"; }
          t += sec;
        } else {
          if (min > 0) {
            if (min < 10) { t += "0"; }
            t = min + ":";
            if (sec < 10) { t += "0"; }
            t += sec;
          } else {
            if (sec < 10) { t += "0"; }
            t = sec;
          }

        }
      }else{
        if (hour > 0) {
          if (hour < 10) {
            t = '0' + hour + ":";
          } else {
            t =  hour + ":";
          }
          if (min < 10) { t += "0"; }
          t += min + ":";
          if (sec < 10) { t += "0"; }
          t += sec;
        } else {
          if (min > 0) {
            if (min < 10) { t += "0"; }
            t = min + ":";
            if (sec < 10) { t += "0"; }
            t += sec;
          } else {
            if (sec < 10) { t += "0"; }
            t = sec;
          }

        }
      }
      



    }
    return t;
  },
  substrXX: function (val, start, length) {
    if (length == undefined) {
      return val.toString().substring(start);
    }
    else {
      return val.toString().substring(start, length);
    }
  }
}
function formatTime(date) {
  if (!date) return "";
  date = getDate(date);
  var year = date.getFullYear()
  var month = date.getMonth() + 1
  var day = date.getDate()
  var hour = date.getHours()
  var minute = date.getMinutes()
  var second = date.getSeconds()

  return [year, month, day].map(formatNumber).join('-') + ' ' + [hour, minute, second].map(formatNumber).join(':')
}

function formatNumber(n) {
  n = n.toString()
  return n[1] ? n : '0' + n
}
function formatDate(date) {
  if(!date) return "";
  date = getDate(date);
  var year = date.getFullYear()
  var month = date.getMonth() + 1
  var day = date.getDate()

  return [year, month, day].map(formatNumber).join('.')
}

module.exports = {
  abs: Filters.abs,
  toFix: Filters.toFix,
  strIndexOf: Filters.strIndexOf,
  strIndexOfHTTP: Filters.strIndexOfHTTP,
  formatTime: formatTime,
  formatDate: formatDate,
  substrXX: Filters.substrXX,
  // 秒转时分秒
  toTime: Filters.toTime,
  toTime2: Filters.toTime2,

}